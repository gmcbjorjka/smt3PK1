/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.kelasC.Jpanel;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;

import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

import com.google.zxing.common.ByteMatrix;
import com.kelasC.koneksi.koneksi;
import java.nio.charset.StandardCharsets;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import com.kelasC.model.model_card;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.UUID;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author teguh
 */
public class FormInputPengiriman extends javax.swing.JPanel {

    /**
     * Creates new form FormBarang
     */
    public FormInputPengiriman() {
        initComponents();
        refreshList();
        refreshtable();
        loadData();
        txt_no_resi.setText(generateID());
        updateCardValues();
    }
    void Bersih(){
        txt_cari.setText("Cari...");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Mainpanel = new javax.swing.JPanel();
        data_pengiriman = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_pengir = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        bt_tambah = new javax.swing.JButton();
        bt_hapus = new javax.swing.JButton();
        btn_batal = new javax.swing.JButton();
        txt_cari = new javax.swing.JTextField();
        bt_cari = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        card1 = new com.kelasC.Jpanel.component.card();
        card2 = new com.kelasC.Jpanel.component.card();
        card3 = new com.kelasC.Jpanel.component.card();
        bt_cetak = new javax.swing.JButton();
        data_tambah_peng = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        bt_simpan = new javax.swing.JButton();
        bt_batal = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_no_resi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_nama_pengirim = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_no_kontak = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_berat_barang = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_ongkir = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_kota_tujuan = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_alamat = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.CardLayout());

        Mainpanel.setLayout(new java.awt.CardLayout());

        data_pengiriman.setBackground(new java.awt.Color(255, 255, 255));
        data_pengiriman.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));

        tabel_pengir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No Resi", "Nama Pengirim", "No Kontak", "Berat Barang", "Ongkir", "Kota Pengiriman", "Alamat"
            }
        ));
        tabel_pengir.getTableHeader().setBackground(new java.awt.Color(255, 255, 102)); // Ganti dengan nilai warna RGB yang diinginkan

        // Mengubah warna garis tepi pada header
        tabel_pengir.getTableHeader().setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(43, 101, 252))); // Ganti dengan nilai warna RGB yang diinginkan
        tabel_pengir.setGridColor(new java.awt.Color(43, 101, 252));
        tabel_pengir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_pengirMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_pengir);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/pengiriman.png"))); // NOI18N
        jLabel1.setText("DATA PENGIRIMAN");

        bt_tambah.setBackground(new java.awt.Color(43, 101, 252));
        bt_tambah.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        bt_tambah.setForeground(new java.awt.Color(255, 255, 255));
        bt_tambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/Add.png"))); // NOI18N
        bt_tambah.setText("TAMBAH");
        bt_tambah.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(43, 101, 252), null, null));
        bt_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tambahActionPerformed(evt);
            }
        });

        bt_hapus.setBackground(new java.awt.Color(255, 51, 51));
        bt_hapus.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        bt_hapus.setForeground(new java.awt.Color(255, 255, 255));
        bt_hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/Delete.png"))); // NOI18N
        bt_hapus.setText("HAPUS");
        bt_hapus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(43, 101, 252), null, null));
        bt_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_hapusActionPerformed(evt);
            }
        });

        btn_batal.setBackground(new java.awt.Color(0, 153, 0));
        btn_batal.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_batal.setForeground(new java.awt.Color(255, 255, 255));
        btn_batal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/Cancel Order.png"))); // NOI18N
        btn_batal.setText("BATAL");
        btn_batal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(43, 101, 252), null, null));
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        txt_cari.setText("Cari...");
        txt_cari.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));
        txt_cari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_cariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cariFocusLost(evt);
            }
        });
        txt_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cariActionPerformed(evt);
            }
        });

        bt_cari.setBackground(new java.awt.Color(43, 101, 252));
        bt_cari.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        bt_cari.setForeground(new java.awt.Color(255, 255, 255));
        bt_cari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/Search.png"))); // NOI18N
        bt_cari.setText("CARI");
        bt_cari.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(43, 101, 252), null, null));
        bt_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cariActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        card1.setColor2(new java.awt.Color(0, 0, 153));
        jLayeredPane1.add(card1);

        card2.setColor2(new java.awt.Color(102, 0, 0));
        jLayeredPane1.add(card2);

        card3.setColor2(new java.awt.Color(102, 102, 0));
        jLayeredPane1.add(card3);

        bt_cetak.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bt_cetak.setText("CETAK QR");
        bt_cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout data_pengirimanLayout = new javax.swing.GroupLayout(data_pengiriman);
        data_pengiriman.setLayout(data_pengirimanLayout);
        data_pengirimanLayout.setHorizontalGroup(
            data_pengirimanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_pengirimanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data_pengirimanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 892, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, data_pengirimanLayout.createSequentialGroup()
                        .addComponent(bt_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_cetak, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, data_pengirimanLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        data_pengirimanLayout.setVerticalGroup(
            data_pengirimanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_pengirimanLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(data_pengirimanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_cetak, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );

        Mainpanel.add(data_pengiriman, "card2");

        data_tambah_peng.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/Fill In Form.png"))); // NOI18N
        jLabel2.setText("INPUT PENGIRIMAN");

        bt_simpan.setBackground(new java.awt.Color(43, 101, 252));
        bt_simpan.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        bt_simpan.setForeground(new java.awt.Color(255, 255, 255));
        bt_simpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/Save.png"))); // NOI18N
        bt_simpan.setText("SIMPAN");
        bt_simpan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(43, 101, 252), null, null));
        bt_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_simpanActionPerformed(evt);
            }
        });

        bt_batal.setBackground(new java.awt.Color(255, 51, 51));
        bt_batal.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        bt_batal.setForeground(new java.awt.Color(255, 255, 255));
        bt_batal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kelasC/assets/image/Cancel Order.png"))); // NOI18N
        bt_batal.setText("BATAL");
        bt_batal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(51, 51, 51), null, null));
        bt_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_batalActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(43, 101, 252)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("No Resi");

        txt_no_resi.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));
        txt_no_resi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_no_resiActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Nama Pengirim");

        txt_nama_pengirim.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));
        txt_nama_pengirim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nama_pengirimActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("No kontak");

        txt_no_kontak.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));
        txt_no_kontak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_no_kontakActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Berat Barang");

        txt_berat_barang.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(43, 101, 252), null));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Ongkir");

        txt_ongkir.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_ongkir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txt_ongkir.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Kota Tujuan");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Alamat");

        txt_kota_tujuan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_kota_tujuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txt_kota_tujuan.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));
        txt_kota_tujuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_kota_tujuanActionPerformed(evt);
            }
        });

        txt_alamat.setColumns(20);
        txt_alamat.setRows(5);
        txt_alamat.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 101, 252)));
        jScrollPane2.setViewportView(txt_alamat);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(799, 805, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_no_resi)
                            .addComponent(txt_nama_pengirim)
                            .addComponent(txt_no_kontak)
                            .addComponent(jScrollPane2)
                            .addComponent(txt_ongkir, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_kota_tujuan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txt_berat_barang))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_no_resi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_nama_pengirim, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_no_kontak, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_berat_barang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_kota_tujuan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ongkir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout data_tambah_pengLayout = new javax.swing.GroupLayout(data_tambah_peng);
        data_tambah_peng.setLayout(data_tambah_pengLayout);
        data_tambah_pengLayout.setHorizontalGroup(
            data_tambah_pengLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(data_tambah_pengLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data_tambah_pengLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(data_tambah_pengLayout.createSequentialGroup()
                        .addComponent(bt_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        data_tambah_pengLayout.setVerticalGroup(
            data_tambah_pengLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_tambah_pengLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(data_tambah_pengLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Mainpanel.add(data_tambah_peng, "card2");

        add(Mainpanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void bt_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_batalActionPerformed
        // TODO add your handling code here:
        Mainpanel.removeAll();
        Mainpanel.repaint();
        Mainpanel.revalidate();
        
        loadData();
        resetForm();
        
        Mainpanel.add(data_pengiriman);
        Mainpanel.repaint();
        Mainpanel.revalidate();
    }//GEN-LAST:event_bt_batalActionPerformed

    private void bt_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_simpanActionPerformed
        // TODO add your handling code here:
        if(bt_simpan.getText().equals("SIMPAN")){
            simpan_data();
            loadData();
        }else if(bt_simpan.getText().equals("PERBARUI")){
            perbaruiData();
            loadData();
        }
    }//GEN-LAST:event_bt_simpanActionPerformed

    private void bt_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tambahActionPerformed
        // TODO add your handling code here:
        if (txt_no_resi.getText().isEmpty()) {
            txt_no_resi.setText(generateID());
        }
        Mainpanel.removeAll();
        Mainpanel.repaint();
        Mainpanel.revalidate();
        
        Mainpanel.add(data_tambah_peng);
        Mainpanel.repaint();
        Mainpanel.revalidate();
        bt_simpan.setText("SIMPAN");
        bt_simpan.setEnabled(true);
        if(bt_tambah.getText().equals("UBAH")){
            edit_table();
        }  
    }//GEN-LAST:event_bt_tambahActionPerformed

    private void bt_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_hapusActionPerformed
        // TODO add your handling code here:
        hapusData();
    }//GEN-LAST:event_bt_hapusActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        // TODO add your handling code here:
        loadData();
        resetForm();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void tabel_pengirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_pengirMouseClicked
        // TODO add your handling code here:
        if(bt_tambah.getText().equals("TAMBAH")){
          bt_tambah.setText("UBAH");
        }
        btn_batal.setVisible(true);
        bt_hapus.setVisible(true);
    }//GEN-LAST:event_tabel_pengirMouseClicked

    private void txt_kota_tujuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_kota_tujuanActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_txt_kota_tujuanActionPerformed

    private void bt_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cariActionPerformed
        // TODO add your handling code here:
        pencarian();
    }//GEN-LAST:event_bt_cariActionPerformed

    private void txt_cariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cariFocusGained
        // TODO add your handling code here:
        String cari = txt_cari.getText();
        if(cari.equals("Cari...")){
            txt_cari.setText("");
        }
    }//GEN-LAST:event_txt_cariFocusGained

    private void txt_cariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cariFocusLost
        // TODO add your handling code here:
        String cari = txt_cari.getText();
        if(cari.equals("")||cari.equals("Cari...")){
            txt_cari.setText("Cari...");
        }
    }//GEN-LAST:event_txt_cariFocusLost

    private void txt_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cariActionPerformed
        // TODO add your handling code here:
        pencarian();
    }//GEN-LAST:event_txt_cariActionPerformed

    private void bt_cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cetakActionPerformed
        try (Connection connection = koneksi.konek()) { 
           
            String query = "SELECT no_resi FROM pengiriman";
            try (PreparedStatement statement = connection.prepareStatement(query);
                 ResultSet resultSet = statement.executeQuery()) {

                while (resultSet.next()) {
                    String kodeBarang = resultSet.getString("no_resi");
                    String data = kodeBarang;
                    String path = kodeBarang + ".png";
                    String charset = StandardCharsets.UTF_8.name();
                    Map<EncodeHintType, ErrorCorrectionLevel> hashMap = new HashMap<>();

                    hashMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);

                    try {
                         ByteMatrix matrix = new MultiFormatWriter().encode(
                                new String(data.getBytes(charset), charset),
                                BarcodeFormat.QR_CODE, 200, 200);

                        MatrixToImageWriter.writeToFile(
                                matrix,
                                path.substring(path.lastIndexOf('.') + 1),
                                new File("C:\\smt3\\pemrograman\\22090031-MohmadTeguhSetiawan\\src\\QR\\" + path));

                     
                        System.out.println("QR Code berhasil dibuat untuk Kode Barang: " + kodeBarang);

                    } catch (WriterException | IOException e) {
                        
                        e.printStackTrace();
                    }
                }
            }
        } catch (java.sql.SQLException e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_bt_cetakActionPerformed

    private void txt_no_resiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_no_resiActionPerformed
        // TODO add your handling code here:
        txt_nama_pengirim.requestFocus();
    }//GEN-LAST:event_txt_no_resiActionPerformed

    private void txt_nama_pengirimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nama_pengirimActionPerformed
        // TODO add your handling code here:
        txt_no_kontak.requestFocus();
    }//GEN-LAST:event_txt_nama_pengirimActionPerformed

    private void txt_no_kontakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_no_kontakActionPerformed
        // TODO add your handling code here:
        txt_berat_barang.requestFocus();
    }//GEN-LAST:event_txt_no_kontakActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Mainpanel;
    private javax.swing.JButton bt_batal;
    private javax.swing.JButton bt_cari;
    private javax.swing.JButton bt_cetak;
    private javax.swing.JButton bt_hapus;
    private javax.swing.JButton bt_simpan;
    private javax.swing.JButton bt_tambah;
    private javax.swing.JButton btn_batal;
    private com.kelasC.Jpanel.component.card card1;
    private com.kelasC.Jpanel.component.card card2;
    private com.kelasC.Jpanel.component.card card3;
    private javax.swing.JPanel data_pengiriman;
    private javax.swing.JPanel data_tambah_peng;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabel_pengir;
    private javax.swing.JTextArea txt_alamat;
    private javax.swing.JTextField txt_berat_barang;
    private javax.swing.JTextField txt_cari;
    private static javax.swing.JComboBox<String> txt_kota_tujuan;
    private javax.swing.JTextField txt_nama_pengirim;
    private javax.swing.JTextField txt_no_kontak;
    private javax.swing.JTextField txt_no_resi;
    private static javax.swing.JComboBox<String> txt_ongkir;
    // End of variables declaration//GEN-END:variables

    private void refreshtable() {
        try {
            DefaultTableModel m = (DefaultTableModel) tabel_pengir.getModel();

            String q = "SELECT * FROM pengiriman";
            Connection k = koneksi.konek();
            Statement s = k.createStatement();
            ResultSet r = s.executeQuery(q);
            m.getDataVector().removeAllElements();
            //int no = 1;
            while (r.next()) {
                String no_res = r.getString("no_resi");
                String nama = r.getString("nama_pengirim");
                String kontak = r.getString("no_kontak");
                String berat_bar = r.getString("berat_barang");
                String ongkir = r.getString("ongkir");
                String kota = r.getString("kota_pengiriman");
                String alamat = r.getString("alamat");
                Object[] data = { no_res, nama, kontak, berat_bar, ongkir, kota, alamat};
                m.addRow(data);
                //no++;                
            }
        } catch (Exception e) {
        }
    }

    private void loadData() {
        bt_hapus.setVisible(false);
        btn_batal.setVisible(false);
        tabel_pengir.clearSelection();
    }

    private String generateID() {
        // Generate a UUID and convert it to a string
        String timestamp = String.valueOf(System.currentTimeMillis());

        // Add a random numeric component to ensure uniqueness
        Random random = new Random();
        int randomSuffix = random.nextInt(10000);  // You can adjust the range based on your needs

        // Combine static text, truncated timestamp, and random numeric component
        String generatedID = "PE" + timestamp.substring(0, Math.min(7 - "PE".length(), timestamp.length()))
                + String.format("%04d", randomSuffix);

        return generatedID;
    }

    private void resetForm() {
        bt_tambah.requestFocus();
        bt_tambah.setText("TAMBAH");
        txt_no_resi.setText("");
        txt_nama_pengirim.setText("");
        txt_no_kontak.setText("");
        txt_berat_barang.setText("");
        txt_ongkir.setSelectedIndex(0);
        txt_kota_tujuan.setSelectedIndex(0);
        txt_alamat.setText("");
    }

    private void simpan_data() {
        bt_tambah.setText("TAMBAH");
        String no_resi = txt_no_resi.getText();
        String nama = txt_nama_pengirim.getText();
        String kontak = txt_no_kontak.getText();
        String berat = txt_berat_barang.getText();
        String ongkir = txt_ongkir.getSelectedItem().toString();
        String kotapeng = txt_kota_tujuan.getSelectedItem().toString();
        String alamat = txt_alamat.getText();
        
        if (no_resi.isEmpty()) {
            no_resi = generateID();
            txt_no_resi.setText(no_resi);
        }
        
        String q = "INSERT INTO "
                + "pengiriman (no_resi,nama_pengirim,no_kontak,berat_barang,ongkir,kota_pengiriman,alamat) "
                + "VALUES ("
                + "'"+no_resi+"','"+nama+"','"+kontak+"','"+berat+"','"+ongkir+"','"+kotapeng+"','"+alamat+"')";
        Connection c = koneksi.konek();
        try {
            Statement s = c.createStatement();
            int result = s.executeUpdate(q);
            if (result > 0) {
            // Jika simpan berhasil
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan", "Sukses", JOptionPane.INFORMATION_MESSAGE);

            // Kembali ke panel data_destinasi
            Mainpanel.removeAll();
            Mainpanel.repaint();
            Mainpanel.revalidate();

            Mainpanel.add(data_pengiriman);
            Mainpanel.repaint();
            Mainpanel.revalidate();

            // Refresh tabel
            refreshtable();
            resetForm();
        } else {
            // Jika simpan gagal
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data", "Error", JOptionPane.ERROR_MESSAGE);
        }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void perbaruiData() {
        bt_tambah.setText("TAMBAH");
        String no_resi = txt_no_resi.getText();
        String nama = txt_nama_pengirim.getText();
        String kontak = txt_no_kontak.getText();
        String berat = txt_berat_barang.getText();
        String ongkir = txt_ongkir.getSelectedItem().toString();
        String kotapeng = txt_kota_tujuan.getSelectedItem().toString();
        String alamat = txt_alamat.getText();

        String q = "UPDATE pengiriman SET nama_pengirim = '" + nama 
                + "', no_kontak = '" + kontak 
                + "',berat_barang = '" + berat 
                + "',ongkir = '" + ongkir 
                + "',kota_pengiriman = '" + kotapeng
                + "', alamat = '" + alamat + "' WHERE id_kurir = '" + no_resi + "'";
        Connection c = koneksi.konek();

        try {
            Statement s = c.createStatement();
            int result = s.executeUpdate(q);

            if (result > 0) {
                // Jika update berhasil
                JOptionPane.showMessageDialog(this, "Data berhasil diperbarui", "Sukses", JOptionPane.INFORMATION_MESSAGE);

                // Kembali ke panel data_destinasi
                Mainpanel.removeAll();
                Mainpanel.repaint();
                Mainpanel.revalidate();

                Mainpanel.add(data_pengiriman);
                Mainpanel.repaint();
                Mainpanel.revalidate();

                // Refresh tabel
                refreshtable();
                resetForm();
            } else {
                    // Jika update gagal
                    JOptionPane.showMessageDialog(this, "Gagal memperbarui data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }

    private void edit_table() {
        data_pengiriman.setVisible(false);
        data_tambah_peng.setVisible(true);
       
        int row = tabel_pengir.getSelectedRow();
       
        txt_no_resi.setEnabled(false);
        txt_no_resi.setText(tabel_pengir.getModel().getValueAt(row, 0).toString());
        txt_nama_pengirim.setText(tabel_pengir.getModel().getValueAt(row, 1).toString());
        txt_no_kontak.setText(tabel_pengir.getModel().getValueAt(row, 2).toString());
        txt_berat_barang.setText(tabel_pengir.getModel().getValueAt(row, 3).toString());
        txt_ongkir.setSelectedItem(tabel_pengir.getModel().getValueAt(row, 4).toString());
        txt_kota_tujuan.setSelectedItem(tabel_pengir.getModel().getValueAt(row, 4).toString());
        txt_alamat.setText(tabel_pengir.getModel().getValueAt(row, 3).toString());
   
        aktif();
        bt_simpan.setText("PERBARUI");
        btn_batal.setVisible(true);
    }

    private void hapusData() {
        int selectedRow = tabel_pengir.getSelectedRow();

        if (selectedRow != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String no_res = tabel_pengir.getModel().getValueAt(selectedRow, 0).toString();
                String query = "DELETE FROM pengiriman WHERE no_resi = '" + no_res + "'";
                Connection c = koneksi.konek();

                try {
                    Statement s = c.createStatement();
                    int result = s.executeUpdate(query);

                    if (result > 0) {
                        // Jika hapus berhasil
                        JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);

                        // Refresh tabel
                        loadData();
                        refreshtable();
                        resetForm();
                    } else {
                        // Jika hapus gagal
                        JOptionPane.showMessageDialog(this, "Gagal menghapus data", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void aktif() {
        txt_no_resi.setEnabled(true);
        txt_nama_pengirim.setEnabled(true);
        txt_no_kontak.setEnabled(true);
        txt_berat_barang.setEnabled(true);
        txt_ongkir.setEnabled(true);
        txt_kota_tujuan.setEnabled(true);
        txt_alamat.setEnabled(true);
    }
    public static void refreshList() {
        try {
            String q = "SELECT * FROM kota_pengiriman";
            Connection k = koneksi.konek();
            Statement s = k.createStatement();
            ResultSet r = s.executeQuery(q);
            txt_ongkir.removeAllItems();
            txt_kota_tujuan.removeAllItems();
            while (r.next()) {
                String ongkir = r.getString("ongkos_kirim");
                String destinasi = r.getString("nama_kota");
                txt_ongkir.addItem(ongkir);
                txt_kota_tujuan.addItem(destinasi);
            }

        } catch (Exception e) {
        }
    }
    private void updateCardValues() {
        try {
            Connection connection = koneksi.konek();
            Statement statement = connection.createStatement();

            // Get the count of rows in the "kota_pengiriman" table
            ResultSet resultSet = statement.executeQuery("SELECT COUNT(*) as total FROM pengiriman");
            if (resultSet.next()) {
                int totalRows = resultSet.getInt("total");

                // Update the card values
                card1.setData(new model_card(new ImageIcon(getClass().getResource("/com/kelasC/assets/image/pengiriman.png")), "PENGIRIMAN", "Total Pengiriman : "+String.valueOf(totalRows), "Menunjukan Total Pengiriman"));
            }
            ResultSet resultSet1 = statement.executeQuery("SELECT kota_pengiriman, COUNT(kota_pengiriman) AS city_count FROM pengiriman GROUP BY kota_pengiriman");

            // Find the city with the highest frequency
            String mostFrequentCity = "";
            int maxCityCount = 0;

            while (resultSet1.next()) {
                String cityName = resultSet1.getString("kota_pengiriman");
                int cityCount = resultSet1.getInt("city_count");

                // Update most frequent city if the count is higher
                if (cityCount > maxCityCount) {
                    mostFrequentCity = cityName;
                    maxCityCount = cityCount;
                }
            }

            // Update card2 values with the most frequent city and its count
            card2.setData(new model_card(new ImageIcon(getClass().getResource("/com/kelasC/assets/image/pengiriman.png")), "PENGIRIMAN TERBANYAK", mostFrequentCity + " (" + maxCityCount + " pengiriman)", "Menunjukan Pengiriman paling sering"));

            // Get the count of rows from another table (modify the query accordingly)
            ResultSet resultSet2 = statement.executeQuery("SELECT COUNT(*) as total FROM kota_pengiriman");
            if (resultSet2.next()) {
                int totalRows2 = resultSet2.getInt("total");

                // Update card3 values
                card3.setData(new model_card(new ImageIcon(getClass().getResource("/com/kelasC/assets/image/Place Marker.png")), "DESTINASI", "Jumlah Destinasi : "+String.valueOf(totalRows2), "Jumlah Destinasi saat Ini"));
            }
        } catch (Exception e) {
                e.printStackTrace();
        }
    }

    private void pencarian() {
        String kataKunci = txt_cari.getText().trim();

        // Memastikan bahwa kata kunci tidak kosong
        if (!kataKunci.isEmpty()) {
            try {
                DefaultTableModel model = (DefaultTableModel) tabel_pengir.getModel();
                Connection k = koneksi.konek();
                Statement s = k.createStatement();

                // Membersihkan tabel sebelum melakukan pencarian baru
                model.setRowCount(0);

                // Melakukan pencarian berdasarkan nama_kurir di dalam tabel
                String q = "SELECT * FROM pengiriman WHERE nama_pengirim LIKE '%" + kataKunci + "%'";
                ResultSet r = s.executeQuery(q);

                // Menambahkan hasil pencarian ke dalam model tabel
                while (r.next()) {
                    String id = r.getString("no_resi");
                    String nama = r.getString("nama_pengirim");
                    String kontak = r.getString("no_kontak");
                    String berat = r.getString("berat_barang");
                    String ongkir = r.getString("ongkir");
                    String kota = r.getString("kota_pengiriman");
                    String alamat = r.getString("alamat");
                    
                    Object[] data = {id, nama, kontak,berat,ongkir,kota,alamat};
                    model.addRow(data);
                }

                // Menutup koneksi dan statement
                r.close();
                s.close();
                k.close();
            } catch (Exception e) {
                // Handle exceptions appropriately (e.g., display an error message)
                e.printStackTrace();
            }
        } else {
            // Jika kata kunci kosong, refresh tabel untuk menampilkan semua data
            refreshtable();
        }
    }
    

}
